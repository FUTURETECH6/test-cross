name: Rust

on:
  workflow_dispatch:
  push:
    # paths:
    #   - 'Cargo.toml'
    #   - 'Cargo.lock'
    #   - 'src'
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - aarch64-unknown-linux-musl
          # - aarch64-pc-windows-msvc
          - x86_64-apple-darwin
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-gnu
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          mkdir archive
          cd archive
          if [ ${{ matrix.target }} == *-pc-windows-* ]; then
            cp "../target/${{ matrix.target }}/release/${GITHUB_REPOSITORY#*/}.exe" ./
            7z a "${GITHUB_REPOSITORY#*/}-${{ matrix.target }}.7z" ${GITHUB_REPOSITORY#*/}.exe
          else
            cp "../target/${{ matrix.target }}/release/${GITHUB_REPOSITORY#*/}*" ./
            tar -czf "${GITHUB_REPOSITORY#*/}-${{ matrix.target }}.tar.gz" ${GITHUB_REPOSITORY#*/}
          fi

      - name: Upload archive
        uses: actions/upload-artifact@v1
        with:
          name: ${GITHUB_REPOSITORY#*/}-${{ matrix.target }}
          path: archive/${GITHUB_REPOSITORY#*/}-${{ matrix.target }}.*
